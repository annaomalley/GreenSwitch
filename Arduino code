#include <Servo.h> // servo library
#include <SPI.h> 
#include <Ethernet.h> // ethernet shield libraries

int servoPin = 9;
int state = 20; // 20 is neutral, 21 is turnOn, 22 ir turnOff
Servo myServo;

int sCCW = 180;
int sCW = 0;
int sStop = 90;

String location = "www.greenswitch.0fees.us/OnOff.html HTTP/1.0";
byte mac[] = { 0x90, 0xA2, 0xDA, 0x0E, 0x9C, 0xF9 }; // MAC address of ethernet shield
//char server[] = "www.google.com";
char server[] = "www.greenswitch.0fees.us"; // name address of website
IPAddress ip(10, 0, 78, 27); // static IP address to use if the DHCP fails to assign 
EthernetClient client;

void setup() {
  Serial.begin(9600);
   while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }

  // start the Ethernet connection:
  if (Ethernet.begin(mac) == 0) {
    Serial.println("Failed to configure Ethernet using DHCP");
    // try to congifure using IP address instead of DHCP:
    Ethernet.begin(mac, ip);
  }
  // give the Ethernet shield a second to initialize:
  delay(1000);
  Serial.println("connecting...");

  // if you get a connection, report back via serial:
  if (client.connect(server, 80)) {
    Serial.println("connected");
    // Make a HTTP request:
    //client.println("Host: www.greenswitch.0fees.us");
    client.println("GET ");
    client.println(location);
    client.println("Connection: close");
    client.println();
  } else {
    // if you didn't get a connection to the server:
    Serial.println("connection failed");
  }
  
  pinMode(servoPin, OUTPUT); // digital pin is an output pin
  myServo.attach(servoPin); // 
}

void loop() {
    if (client.available()) {
    char c = client.read();
    Serial.print(c);
  }

  // if the server's disconnected, stop the client:
  if (!client.connected()) {
    Serial.println();
    Serial.println("disconnecting.");
    client.stop();
  
  if (state == 21) {
    myServo.write(sCCW);
    delay(500); //ms
    myServo.write(sStop);
    //delay(4000); 
    state = 20;
  }

  if (state == 22) {
    myServo.write(sCW);
    delay(500); 
    myServo.write(sStop);
    //delay(4000); 
    state = 20;
  }
  
  // do nothing forevermore:
    while (true);
  }
}
